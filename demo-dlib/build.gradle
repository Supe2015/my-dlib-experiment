apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// Some annotation processors (such as AutoFactory) rely on precise types in
// declaration signatures. By default, Kapt replaces every unknown type
// (including types for the generated classes) to NonExistentClass, but you
// can change this behavior. Add the additional flag to the build.gradle file
// to enable error type inferring in stubs:
kapt {
    correctErrorTypes = true
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "my.demo.dlib"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            // Options: 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            abiFilters 'armeabi-v7a'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    aaptOptions {
        noCompress "tflite"
    }

    // Pick first STL shared library if there're duplicate files in the
    // dependent module.
    packagingOptions {
        pickFirst  "**/libc++_shared.so"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

}

repositories {
    maven { url "https://maven.fabric.io/public" }
    // Find the AAR files in the libs folder.
    flatDir { dirs "libs" }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Google Support Library.
    implementation rootProject.ext.dep.supportAppcompatV7
    implementation rootProject.ext.dep.supportRecyclerViewV7
    implementation rootProject.ext.dep.supportGridLayoutV7
    implementation rootProject.ext.dep.supportCardViewV7
    implementation rootProject.ext.dep.supportDesign
    implementation rootProject.ext.dep.supportVectorDrawable
    implementation rootProject.ext.dep.supportConstraintLayout
    implementation rootProject.ext.dep.supportPercent
    implementation rootProject.ext.dep.supportTransition
    // Multi-dex.
    implementation rootProject.ext.dep.supportMultidex
    // Google CameraView.
    implementation(name: "google-cameraview", ext:"aar")
    // Google Vision.
    implementation rootProject.ext.dep.playServicesVision

    // Rx-Java.
    implementation rootProject.ext.dep.rxJava
    implementation rootProject.ext.dep.rxAndroid
    // Rx-Binding.
    implementation rootProject.ext.dep.rxBinding
    implementation rootProject.ext.dep.rxBindingRecyclerViewV7
    // Rx-Permissions.
    implementation rootProject.ext.dep.rxPermissions

    // JSON.
    implementation rootProject.ext.dep.gson

    // View Binding.
    implementation rootProject.ext.dep.butterKnife
    annotationProcessor rootProject.ext.dep.butterKnifeCompiler

    // Image loader.
    implementation rootProject.ext.dep.glide

    // Leak Detection.
    implementation rootProject.ext.dep.leakcanary
    releaseCompile rootProject.ext.dep.leakcanaryNoOp

    // My Libraries
    implementation(name: "lib-core-release", ext: "aar")
    implementation(name: "lib-reactive-release", ext: "aar")
    implementation(name: "lib-widget-release", ext: "aar")
    implementation project(":lib-dlib")

    testImplementation rootProject.ext.dep.testJunit
    testImplementation rootProject.ext.dep.testMockito
    testImplementation rootProject.ext.dep.leakcanaryNoOp

    androidTestImplementation(rootProject.ext.dep.testEspressoCore, {
        exclude group: "com.android.support", module: "support-annotations"
    })
}
